{"version":3,"sources":["utils/apiRequests.js","utils/util-functions.js","index.js","config/index.js"],"names":["origin","config","getPersonUrls","a","axios","get","urls","rng","require","seedrandom","shuffleArray","originalArray","array","i","length","j","Math","floor","getUrls","apiRequests","response","data","getShuffledUrls","shuffledUrls","Face","props","src","className","alt","ReactDOM","render","useState","setUrls","useEffect","console","log","fetchUrls","pageExplanation","faces","map","url","absoluteUrl","key","document","getElementById","port","process","PORT","module","exports"],"mappings":"gTAGQA,E,OAAWC,EAAXD,OAOO,GACbE,cANiB,sCAAG,4BAAAC,EAAA,qEACDC,IAAMC,IAAN,UAAaL,EAAb,yBADC,cACdM,EADc,yBAEbA,GAFa,yCAAH,sD,QCHbC,EAFaC,EAAQ,GAEfC,CAAW,aAEvB,SAASC,EAAaC,GAElB,IADA,IAAMC,EAAK,YAAOD,GACTE,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMV,KAASM,EAAI,IADK,EAEhB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFgC,KAE5BD,EAAMG,GAFsB,KAI3C,OAAOH,E,UCFLM,EAAO,sCAAG,8BAAAf,EAAA,qEACSgB,EAAYjB,gBADrB,cACRkB,EADQ,OAERd,EAAOc,EAASC,KAFR,kBAGPf,GAHO,yCAAH,qDAMPgB,EAAe,sCAAG,8BAAAnB,EAAA,qEACHe,IADG,cAChBZ,EADgB,OAEhBiB,EAAeb,EAAaJ,GAFZ,kBAGfiB,GAHe,yCAAH,qDAgDfC,EAAO,SAACC,GAAW,IACfC,EAAQD,EAARC,IACR,OACE,yBACEC,UAAU,OACVD,IAAKA,EACLE,IAAI,oBAUVC,IAASC,OACP,kBA3DW,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACVzB,EADU,KACJ0B,EADI,KAGjBC,oBAAU,WAAM,2CACd,4BAAA9B,EAAA,8EAEuBmB,IAFvB,OAEUhB,EAFV,OAGI0B,EAAQ1B,GAHZ,gDAKI4B,QAAQC,IAAR,MALJ,wDADc,uBAAC,WAAD,wBASdC,IACC,IAEH,IAAMC,EAAkB,CACrB,+DAGA,6EAGA,yGAGA,yKAKGC,EAAQhC,EAAKiC,IAAI,SAAAC,GACrB,IAAMC,EAAW,UAAMzC,UAAN,OAAewC,GAChC,OAAQ,kBAAC,EAAD,CAAME,IAAKF,EAAKd,IAAKe,MAG/B,MAAO,CACLJ,EACC,6BACDC,IAqBF,MACAK,SAASC,eAAe,U,gBChF1B,IAAMC,EAAOC,+CAAYC,MAAQ,KAGjCb,QAAQC,IAAI,eACZD,QAAQC,IAAIW,gDACZZ,QAAQC,IAAI,OAAQU,GASpB,IAAM7C,EAAM,2BAAuB6C,GAGnCG,EAAOC,QAAU,CACfjD,Y","file":"static/js/main.8a2fa861.chunk.js","sourcesContent":["import axios from \"axios\";\nimport config from \"../config\";\n\nconst { origin } = config;\n\nconst getPersonUrls = async () => {\n  const urls = await axios.get(`${origin}/api/v1/persons/urls`);\n  return urls;\n};\n\nexport default {\n  getPersonUrls,\n};\n","const seedrandom = require('seedrandom');\n\nconst rng = seedrandom('aGoodSeed'); // shuffle using the same seed to avoid disorientating users\n\nfunction shuffleArray(originalArray) {\n    const array = [...originalArray];\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(rng() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\nexport {\n  shuffleArray,\n}\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport apiRequests from './utils/apiRequests';\nimport { shuffleArray } from './utils/util-functions';\nimport { origin } from './config';\nimport './index.css';\n\nconst getUrls = async () => {\n  const response = await apiRequests.getPersonUrls();\n  const urls = response.data;\n  return urls;\n}\n\nconst getShuffledUrls = async () => {\n  const urls = await getUrls();\n  const shuffledUrls = shuffleArray(urls);\n  return shuffledUrls;\n}\n\nconst Page = () => {\n  const [urls, setUrls] = useState([]);\n\n  useEffect(() => {\n    async function fetchUrls() {\n      try {\n        const urls = await getShuffledUrls();\n        setUrls(urls);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchUrls()\n  }, []);\n\n  const pageExplanation = [\n    (<h2>\n      Here are the 64 missing people.\n    </h2>),\n    (<h3>\n      Choose (in your head) who you're looking for.\n    </h3>),\n    (<h3>\n      When you're read, go back to the Reunite app to start searching for them.\n    </h3>),\n    (<p>\n      (These photos are generated from celebrity faces. This demo uses these faces because we do not yet have access to a database of refugees)\n    </p>),\n  ];\n\n  const faces = urls.map(url => {\n    const absoluteUrl = `${origin}${url}`;\n    return (<Face key={url} src={absoluteUrl}></Face>);\n  });\n\n  return [\n    pageExplanation,\n    (<br></br>),\n    faces,\n  ];\n}\n\nconst Face = (props) => {\n  const { src } = props;\n  return (\n    <img\n      className=\"face\"\n      src={src}\n      alt=\"Missing person\"\n    >\n    </img>\n    // For debug:\n    // <p>{src}</p>\n  )\n}\n\n// ========================================\n\nReactDOM.render(\n  <Page />,\n  document.getElementById('root')\n);\n","const port = process.env.PORT || 9100;\n\n// For debug\nconsole.log('process.env');\nconsole.log(process.env);\nconsole.log('port', port);\n\n// TODO: get this working in all environments\n// In IBM Cloud Foundry, process.env = { NODE_ENV: 'production', PUBLIC_URL, '\".\"' }\n// When built using `npm run build`, process.env also = { NODE_ENV: 'production', PUBLIC_URL, '\".\"' } This may be because in package.json I set \"homepage\": \".\"\n\n// const inCloudEnv = (process.env.NODE_ENV === 'production') && (process.env.PUBLIC_URL === \".\");\n// const origin = inCloudEnv ? 'https://reunite.eu-gb.cf.appdomain.cloud' : `http://localhost:${port}`;\n\nconst origin = `http://localhost:${port}`;\n// const origin = 'https://reunite.eu-gb.cf.appdomain.cloud';\n\nmodule.exports = {\n  origin,\n};\n"],"sourceRoot":""}